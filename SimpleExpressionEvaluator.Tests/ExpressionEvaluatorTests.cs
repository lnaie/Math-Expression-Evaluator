using System;
using Xunit;

namespace SimpleExpressionEvaluator.Tests
{
    public class ExpressionEvaluatorTests: IUseFixture<object>
    {
        private DynamicExpressionEvaluator _dynamicEngine;
        private Random generator;

		public void SetFixture(object data)
		{
			_dynamicEngine = new DynamicExpressionEvaluator();
			generator = new Random();
		}


		[Fact]
        public void Empty_String_Is_Zero()
        {
            Assert.Equal(_dynamicEngine.Evaluate(""), 0);
        }

		[Fact]
        public void Decimal_Is_Treated_As_Decimal()
        {
            var left = generator.Next(1, 100);

			Assert.Equal(_dynamicEngine.Evaluate(left.ToString()), left);
        }

		[Fact]
        public void Two_Plus_Two_Is_Four()
        {
			Assert.Equal(_dynamicEngine.Evaluate("2+2"), 4);
        }

		[Fact]
        public void Can_Add_Two_Decimal_Numbers()
        {
			Assert.Equal(_dynamicEngine.Evaluate("2.7+3.2"), (2.7m + 3.2m));
        }

		[Fact]
        public void Can_Add_Many_Numbers()
        {
			Assert.Equal(_dynamicEngine.Evaluate("1.2+3.4+5.6+7.8"), (1.2m + 3.4m + 5.6m + 7.8m));
			Assert.Equal(_dynamicEngine.Evaluate("1.7+2.9+14.24+6.58"), (1.7m + 2.9m + 14.24m + 6.58m));
        }

		[Fact]
        public void Can_Subtract_Two_Numbers()
        {
			Assert.Equal(_dynamicEngine.Evaluate("5-2"), (5 - 2));
        }

		[Fact]
        public void Can_Subtract_Multiple_Numbers()
        {
			Assert.Equal(_dynamicEngine.Evaluate("15.2-2.3-4.8-0.58"), (15.2m - 2.3m - 4.8m - 0.58m));
        }

		[Fact]
        public void Can_Add_And_Subtract_Multiple_Numbers()
        {
			Assert.Equal(_dynamicEngine.Evaluate("15+8-4-2+7"), (15 + 8 - 4 - 2 + 7));
			Assert.Equal(_dynamicEngine.Evaluate("17.89-2.47+7.16"), (17.89m - 2.47m + 7.16m));

        }

		[Fact]
        public void Can_Add_Subtract_Multiply_Divide_Multiple_Numbers()
        {
			Assert.Equal(_dynamicEngine.Evaluate("50-5*3*2+7"), (50 - 5 * 3 * 2 + 7));
			Assert.Equal(_dynamicEngine.Evaluate("84+15+4-4*3*9+24+4-54/3-5-7+47"), (84 + 15 + 4 - 4 * 3 * 9 + 24 + 4 - 54 / 3 - 5 - 7 + 47));
			Assert.Equal(_dynamicEngine.Evaluate("50-48/4/3+7*2*4+2+5+8"), (50 - 48 / 4 / 3 + 7 * 2 * 4 + 2 + 5 + 8));
			Assert.Equal(_dynamicEngine.Evaluate("5/2/2+1.5*3+4.58"), (5 / 2m / 2m + 1.5m * 3m + 4.58m));
			Assert.Equal(_dynamicEngine.Evaluate("25/3+1.34*2.56+1.49+2.36/1.48"), (25 / 3m + 1.34m * 2.56m + 1.49m + 2.36m / 1.48m));
			Assert.Equal(_dynamicEngine.Evaluate("2*3+5-4-2*5+7"), (2 * 3 + 5 - 4 - 2 * 5 + 7));
        }

		[Fact]
        public void Supports_Parentheses()
        {
			Assert.Equal(_dynamicEngine.Evaluate("2*(5+3)"), (2 * (5 + 3)));
			Assert.Equal(_dynamicEngine.Evaluate("(5+3)*2"), ((5 + 3) * 2));
			Assert.Equal(_dynamicEngine.Evaluate("(5+3)*5-2"), ((5 + 3) * 5 - 2));
			Assert.Equal(_dynamicEngine.Evaluate("(5+3)*(5-2)"), ((5 + 3) * (5 - 2)));
			Assert.Equal(_dynamicEngine.Evaluate("((5+3)*3-(8-2)/2)/2"), (((5 + 3) * 3 - (8 - 2) / 2) / 2m));
			Assert.Equal(_dynamicEngine.Evaluate("(4*(3+5)-4-8/2-(6-4)/2)*((2+4)*4-(8-5)/3)-5"), ((4 * (3 + 5) - 4 - 8 / 2 - (6 - 4) / 2) * ((2 + 4) * 4 - (8 - 5) / 3) - 5));
			Assert.Equal(_dynamicEngine.Evaluate("(((9-6/2)*2-4)/2-6-1)/(2+24/(2+4))"), ((((9 - 6 / 2) * 2 - 4) / 2m - 6 - 1) / (2 + 24 / (2 + 4))));
        }

		[Fact]
        public void Can_Process_Simple_Variables()
        {
            decimal a = 2.6m;
            decimal b = 5.7m;

			Assert.Equal(_dynamicEngine.Evaluate("a", new { a }), (a));
			Assert.Equal(_dynamicEngine.Evaluate("a+a", new { a }), (a + a));
			Assert.Equal(_dynamicEngine.Evaluate("a+b", new { a, b }), (a + b));
        }

		[Fact]
        public void Can_Process_Multiple_Variables()
        {
            var a = 6;
            var b = 4.5m;
            var c = 2.6m;
			Assert.Equal(_dynamicEngine.Evaluate("(((9-a/2)*2-b)/2-a-1)/(2+c/(2+4))", new { a, b, c }), ((((9 - a / 2) * 2 - b) / 2 - a - 1) / (2 + c / (2 + 4))));
			Assert.Equal(_dynamicEngine.Evaluate("(c+b)*a", new { a, b, c }), ((c + b) * a));
        }

		[Fact]
        public void Can_Pass_Named_Variables()
        {
            dynamic dynamicEngine = new DynamicExpressionEvaluator();

            var a = 6;
            var b = 4.5m;
            var c = 2.6m;

			Assert.Equal(dynamicEngine.Evaluate("(c+b)*a", a: 6, b: 4.5, c: 2.6), ((c + b) * a));
        }

		[Fact]
        public void Can_Invoke_Expression_Multiple_Times()
        {
            var a = 6m;
            var b = 3.9m;
            var c = 4.9m;

            var compiled = _dynamicEngine.Compile("(a+b)/(a+c)");
			Assert.Equal(compiled(new { a, b, c }), ((a + b) / (a + c)));

            a = 5.4m;
            b = -2.4m;
            c = 7.5m;

			Assert.Equal(compiled(new { a, b, c }), ((a + b) / (a + c)));
        }

		[Fact]
		public void Supports_Operands_With_Exponent_E()
		{
			Assert.Equal(
				_dynamicEngine.Evaluate("148.8898+4e-04"),
				(decimal)(148.8898 + 4e-04)
			);

			Assert.Equal(
				_dynamicEngine.Evaluate("148+(4e+1*0)"),
				(decimal)(148 + (4e+04 * 0))
			);

			Assert.Equal(
				_dynamicEngine.Evaluate("148.8898+(4e10-3)"),
				(decimal)(148.8898 + (4e10 - 3))
			);
		}

		[Fact]
		public void Supports_Signed_Operands()
		{
			Assert.Equal(
				_dynamicEngine.Evaluate("(+2.71*-1) * -34.1"),
				(decimal)((+2.71*-1) * -34.1)
			);

			Assert.Equal(
				_dynamicEngine.Evaluate("+148.8898 +(-3.1481*0)-(12.30/-10)"),
				(decimal)(+148.8898 + (-3.1481 * 0) - (12.30 / -10))
			);

			Assert.Equal(
				_dynamicEngine.Evaluate("-148.8898+(-3.1481*1*0) - (-15.2888*1)+ (+2*0*1)-(+2.71*-1) *-34.1"),
				(decimal)(-148.8898 + (-3.1481 * 1 * 0) - (-15.2888 * 1) + (+2 * 0 * 1) - (+2.71 * -1) * -34.1)
			);
		}

		[Fact]
		public void Handle_Long_Wierd_Expression()
		{
			Assert.Equal(
				_dynamicEngine.Evaluate("148.8898+(-3.1481*0)+(-15.2888*0)+(-2.71*0)+(0.124*0)+(0.1314*0)+(-15.2856*0)+(76.4082*0)+(713.0611*0)+(4.4179*0)+(-2259.0419*0)+(-90.0943*0)+(-55.6887*0)+(34953.419*0)+(-160.3607*0)+(-90.5272*0)+(-106.9284*0)+(8.7255*0)+(-40.1407*0)+(45.0576*0)+(15.8387*0)+(-36.4028*0)+(-0.0056*0)+(-4.1241*0*0)+(3.9318*0*0)+(0.0385*0*0)+(0.0699*0*0)+(-0.2922*0*0)+(-15.7768*0*0)+(770.3076*0*0)+(-14.8155*0*0)+(-71.7873*0*0)+(5.1916*0*0)+(2.8271*0*0)+(-95.6295*0*0)+(17.8442*0*0)+(10.9958*0*0)+(4.9083*0*0)+(6.8475*0*0)+(3.2769*0*0)+(2.3691*0*0)+(-5.3045*0*0)+(-3.8788*0*0)+(-0.0418*0*0)+(0.5138*0*0)+(-0.0882*0*0)+(-3e-04*0*0)+(0.7676*0*0)+(-12.204*0*0)+(-621.3016*0*0)+(-2.5758*0*0)+(66.2834*0*0)+(11.3999*0*0)+(13.2262*0*0)+(779.1378*0*0)+(4.8444*0*0)+(9.7856*0*0)+(-3.0264*0*0)+(-2.4859*0*0)+(-3.5218*0*0)+(-3.3729*0*0)+(0.807*0*0)+(3.2921*0*0)+(0.1081*0*0)+(-0.0924*0*0)+(0.0109*0*0)+(1.6069*0*0)+(0.6637*0*0)+(6.9986*0*0)+(204.8983*0*0)+(2.92*0*0)+(1.607*0*0)+(524.5228*0*0)+(-2.5371*0*0)+(-1.2227*0*0)+(-16.9894*0*0)+(0.8319*0*0)+(-1.7426*0*0)+(-1.3044*0*0)+(-0.5369*0*0)+(-2.1912*0*0)+(-0.0029*0*0)+(0.0012*0*0)+(0.0136*0*0)+(0.0777*0*0)+(7.5132*0*0)+(-0.0382*0*0)+(0.5183*0*0)+(0.0904*0*0)+(-5e-04*0*0)+(-0.745*0*0)+(-0.0369*0*0)+(-0.0568*0*0)+(-0.1433*0*0)+(-0.1179*0*0)+(0.0033*0*0)+(-0.1166*0*0)+(0.0393*0*0)+(-0.0041*0*0)+(4e-04*0*0)+(0.0135*0*0)+(-0.0737*0*0)+(-2.8252*0*0)+(0.0299*0*0)+(0.4142*0*0)+(0.1339*0*0)+(0.1248*0*0)+(-0.0838*0*0)+(-0.0717*0*0)+(-0.0244*0*0)+(-0.1397*0*0)+(-0.2543*0*0)+(-0.0279*0*0)+(-0.0144*0*0)+(0.0016*0*0)+(-0.0339*0*0)+(-4e-04*0*0)+(-3.2411*0*0)+(-16.2624*0*0)+(6.2585*0*0)+(7.4826*0*0)+(-958.751*0*0)+(10.937*0*0)+(3.5764*0*0)+(12.7617*0*0)+(0.9335*0*0)+(-0.4402*0*0)+(-0.9826*0*0)+(3.472*0*0)+(4.5391*0*0)+(-0.0148*0*0)+(9.4876*0*0)+(26.0982*0*0)+(-814.0935*0*0)+(-0.143*0*0)+(-34.6169*0*0)+(-96.8024*0*0)+(-5.3617*0*0)+(10.1971*0*0)+(0.1298*0*0)+(-4.0123*0*0)+(0.0125*0*0)+(-0.9137*0*0)+(-173.2188*0*0)+(79.7653*0*0)+(159.6004*0*0)+(1086.1905*0*0)+(80.0744*0*0)+(57.6934*0*0)+(28.7954*0*0)+(-44.2015*0*0)+(5.3241*0*0)+(14.7302*0*0)+(0.0142*0*0)+(0.0375*0*0)+(2951.1366*0*0)+(-1779.4885*0*0)+(0.1859*0*0)+(-114.7329*0*0)+(-3175.3812*0*0)+(-56.8276*0*0)+(-38.1132*0*0)+(32.785*0*0)+(19.9995*0*0)+(19.858*0*0)+(-11.1022*0*0)+(-7.9691*0*0)+(3.3397*0*0)+(0.0076*0*0)+(-102.6568*0*0)+(-34.1345*0*0)+(-78.183*0*0)+(6.6129*0*0)+(54.3725*0*0)+(-28.7352*0*0)+(2.4274*0*0)+(-27.2501*0*0)+(0.0316*0*0)+(242.6899*0*0)+(36396.5906*0*0)+(12077.6245*0*0)+(1.8611*0*0)+(-26.357*0*0)+(56.5219*0*0)+(32.9004*0*0)+(25.5848*0*0)+(20.2992*0*0)+(-0.0308*0*0)+(3.8229*0*0)+(0.015*0*0)+(46.9473*0*0)+(62.2523*0*0)+(-1.8827*0*0)+(-11.7417*0*0)+(2.8169*0*0)+(7.6268*0*0)+(0.0071*0*0)+(10.1876*0*0)+(42.9106*0*0)+(-27.7502*0*0)+(-56.3166*0*0)+(-6.6272*0*0)+(0.1116*0*0)+(6.3468*0*0)+(-9.4682*0*0)+(-1.3479*0*0)+(5.1112*0*0)+(-0.0547*0*0)+(6.8306*0*0)+(5.3005*0*0)+(-0.0262*0*0)+(-0.7455*0*0)+(-0.0246*0*0)+(-0.0021*0*0)+(0.0279*0*0)"),
				(decimal)(148.8898 + (-3.1481 * 0) + (-15.2888 * 0) + (-2.71 * 0) + (0.124 * 0) + (0.1314 * 0) + (-15.2856 * 0) + (76.4082 * 0) + (713.0611 * 0) + (4.4179 * 0) + (-2259.0419 * 0) + (-90.0943 * 0) + (-55.6887 * 0) + (34953.419 * 0) + (-160.3607 * 0) + (-90.5272 * 0) + (-106.9284 * 0) + (8.7255 * 0) + (-40.1407 * 0) + (45.0576 * 0) + (15.8387 * 0) + (-36.4028 * 0) + (-0.0056 * 0) + (-4.1241 * 0 * 0) + (3.9318 * 0 * 0) + (0.0385 * 0 * 0) + (0.0699 * 0 * 0) + (-0.2922 * 0 * 0) + (-15.7768 * 0 * 0) + (770.3076 * 0 * 0) + (-14.8155 * 0 * 0) + (-71.7873 * 0 * 0) + (5.1916 * 0 * 0) + (2.8271 * 0 * 0) + (-95.6295 * 0 * 0) + (17.8442 * 0 * 0) + (10.9958 * 0 * 0) + (4.9083 * 0 * 0) + (6.8475 * 0 * 0) + (3.2769 * 0 * 0) + (2.3691 * 0 * 0) + (-5.3045 * 0 * 0) + (-3.8788 * 0 * 0) + (-0.0418 * 0 * 0) + (0.5138 * 0 * 0) + (-0.0882 * 0 * 0) + (-3e-04 * 0 * 0) + (0.7676 * 0 * 0) + (-12.204 * 0 * 0) + (-621.3016 * 0 * 0) + (-2.5758 * 0 * 0) + (66.2834 * 0 * 0) + (11.3999 * 0 * 0) + (13.2262 * 0 * 0) + (779.1378 * 0 * 0) + (4.8444 * 0 * 0) + (9.7856 * 0 * 0) + (-3.0264 * 0 * 0) + (-2.4859 * 0 * 0) + (-3.5218 * 0 * 0) + (-3.3729 * 0 * 0) + (0.807 * 0 * 0) + (3.2921 * 0 * 0) + (0.1081 * 0 * 0) + (-0.0924 * 0 * 0) + (0.0109 * 0 * 0) + (1.6069 * 0 * 0) + (0.6637 * 0 * 0) + (6.9986 * 0 * 0) + (204.8983 * 0 * 0) + (2.92 * 0 * 0) + (1.607 * 0 * 0) + (524.5228 * 0 * 0) + (-2.5371 * 0 * 0) + (-1.2227 * 0 * 0) + (-16.9894 * 0 * 0) + (0.8319 * 0 * 0) + (-1.7426 * 0 * 0) + (-1.3044 * 0 * 0) + (-0.5369 * 0 * 0) + (-2.1912 * 0 * 0) + (-0.0029 * 0 * 0) + (0.0012 * 0 * 0) + (0.0136 * 0 * 0) + (0.0777 * 0 * 0) + (7.5132 * 0 * 0) + (-0.0382 * 0 * 0) + (0.5183 * 0 * 0) + (0.0904 * 0 * 0) + (-5e-04 * 0 * 0) + (-0.745 * 0 * 0) + (-0.0369 * 0 * 0) + (-0.0568 * 0 * 0) + (-0.1433 * 0 * 0) + (-0.1179 * 0 * 0) + (0.0033 * 0 * 0) + (-0.1166 * 0 * 0) + (0.0393 * 0 * 0) + (-0.0041 * 0 * 0) + (4e-04 * 0 * 0) + (0.0135 * 0 * 0) + (-0.0737 * 0 * 0) + (-2.8252 * 0 * 0) + (0.0299 * 0 * 0) + (0.4142 * 0 * 0) + (0.1339 * 0 * 0) + (0.1248 * 0 * 0) + (-0.0838 * 0 * 0) + (-0.0717 * 0 * 0) + (-0.0244 * 0 * 0) + (-0.1397 * 0 * 0) + (-0.2543 * 0 * 0) + (-0.0279 * 0 * 0) + (-0.0144 * 0 * 0) + (0.0016 * 0 * 0) + (-0.0339 * 0 * 0) + (-4e-04 * 0 * 0) + (-3.2411 * 0 * 0) + (-16.2624 * 0 * 0) + (6.2585 * 0 * 0) + (7.4826 * 0 * 0) + (-958.751 * 0 * 0) + (10.937 * 0 * 0) + (3.5764 * 0 * 0) + (12.7617 * 0 * 0) + (0.9335 * 0 * 0) + (-0.4402 * 0 * 0) + (-0.9826 * 0 * 0) + (3.472 * 0 * 0) + (4.5391 * 0 * 0) + (-0.0148 * 0 * 0) + (9.4876 * 0 * 0) + (26.0982 * 0 * 0) + (-814.0935 * 0 * 0) + (-0.143 * 0 * 0) + (-34.6169 * 0 * 0) + (-96.8024 * 0 * 0) + (-5.3617 * 0 * 0) + (10.1971 * 0 * 0) + (0.1298 * 0 * 0) + (-4.0123 * 0 * 0) + (0.0125 * 0 * 0) + (-0.9137 * 0 * 0) + (-173.2188 * 0 * 0) + (79.7653 * 0 * 0) + (159.6004 * 0 * 0) + (1086.1905 * 0 * 0) + (80.0744 * 0 * 0) + (57.6934 * 0 * 0) + (28.7954 * 0 * 0) + (-44.2015 * 0 * 0) + (5.3241 * 0 * 0) + (14.7302 * 0 * 0) + (0.0142 * 0 * 0) + (0.0375 * 0 * 0) + (2951.1366 * 0 * 0) + (-1779.4885 * 0 * 0) + (0.1859 * 0 * 0) + (-114.7329 * 0 * 0) + (-3175.3812 * 0 * 0) + (-56.8276 * 0 * 0) + (-38.1132 * 0 * 0) + (32.785 * 0 * 0) + (19.9995 * 0 * 0) + (19.858 * 0 * 0) + (-11.1022 * 0 * 0) + (-7.9691 * 0 * 0) + (3.3397 * 0 * 0) + (0.0076 * 0 * 0) + (-102.6568 * 0 * 0) + (-34.1345 * 0 * 0) + (-78.183 * 0 * 0) + (6.6129 * 0 * 0) + (54.3725 * 0 * 0) + (-28.7352 * 0 * 0) + (2.4274 * 0 * 0) + (-27.2501 * 0 * 0) + (0.0316 * 0 * 0) + (242.6899 * 0 * 0) + (36396.5906 * 0 * 0) + (12077.6245 * 0 * 0) + (1.8611 * 0 * 0) + (-26.357 * 0 * 0) + (56.5219 * 0 * 0) + (32.9004 * 0 * 0) + (25.5848 * 0 * 0) + (20.2992 * 0 * 0) + (-0.0308 * 0 * 0) + (3.8229 * 0 * 0) + (0.015 * 0 * 0) + (46.9473 * 0 * 0) + (62.2523 * 0 * 0) + (-1.8827 * 0 * 0) + (-11.7417 * 0 * 0) + (2.8169 * 0 * 0) + (7.6268 * 0 * 0) + (0.0071 * 0 * 0) + (10.1876 * 0 * 0) + (42.9106 * 0 * 0) + (-27.7502 * 0 * 0) + (-56.3166 * 0 * 0) + (-6.6272 * 0 * 0) + (0.1116 * 0 * 0) + (6.3468 * 0 * 0) + (-9.4682 * 0 * 0) + (-1.3479 * 0 * 0) + (5.1112 * 0 * 0) + (-0.0547 * 0 * 0) + (6.8306 * 0 * 0) + (5.3005 * 0 * 0) + (-0.0262 * 0 * 0) + (-0.7455 * 0 * 0) + (-0.0246 * 0 * 0) + (-0.0021 * 0 * 0) + (0.0279 * 0 * 0))
			);
		}
	}
}